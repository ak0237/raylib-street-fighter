void populacor(Color* cor, int max, int* cordados){
    int i, j;

    for(i = 0; i < max; i++){
        cor[i].a = 255;
        for(j=0; j < 3; j++){
            cor[i].r = cordados[0];
            switch (j)
            {
            case 0:
                cor[i].r = cordados[(j%3) + (int)j/3];
                break;
            case 1:
                cor[i].g = cordados[(j%3) + (int)j/3];
                break;
            case 2:
                cor[i].b = cordados[(j%3) + (int)j/3];
            default:
                break;
            }
        }
    }
}


Color* verdes = calloc(4, sizeof(Color));
    
    verdes[0].r = 57;
    verdes[0].g = 89;
    verdes[0].b = 24;
    verdes[0].a = 255;

    verdes[1].r = 82;
    verdes[1].g = 113;
    verdes[1].b = 49;
    verdes[1].a = 255;

    verdes[2].r = 115;
    verdes[2].g = 162;
    verdes[2].b = 82;
    verdes[2].a = 255;

    verdes[3].r = 156;
    verdes[3].g = 203;
    verdes[3].b = 132;
    verdes[3].a = 255;

    Color* rosas = calloc(4, sizeof(Color));
    
    rosas[0].r = 165;
    rosas[0].g = 24;
    rosas[0].b = 99;
    rosas[0].a = 255;

    rosas[1].r = 181;
    rosas[1].g = 65;
    rosas[1].b = 23;
    rosas[1].a = 255;

    rosas[2].r = 222;
    rosas[2].g = 121;
    rosas[2].b = 156;
    rosas[2].a = 255;

    rosas[3].r = 247;
    rosas[3].g = 162;
    rosas[3].b = 198;
    rosas[3].a = 255;

    for(k = 0; k < 4; k++){
        ImageColorReplace(&sprtidlcammy, verdes[k], rosas[k]);
        Color c = corr[k];
        Color b = cor[k];
        printf("Corr %d -> R:%d G:%d B:%d A:%d\nCor -> R:%d G:%d B:%d A:%d\n------------------\n", k, c.r, c.g, c.b, c.a, b.r, b.g, b.b, b.a);

    }



    ============================================================SEGURANÃ‡A=========================
    /** 
    Animation ancammyidl = {.first=first, .last = last, .cur = cur, .duration_left=durationl, .speed=anspeed, .step = stp, .type = REPEATING};
    Animation ancammywlk = {.first=0, .last = fWALKING-1, .cur = 0, .duration_left=0.1, .speed=0.1, .step = 1, .type = REPEATING};
    Animation ancammywlkb = {.first=0, .last= fWALKINGB-1, .cur = 5, .duration_left=0.1, .speed=0.1, .step = -1, .type = REPEATING};
    Animation ancammypun1 = {.first=0, .last = fPUNCHING1-1, .cur = 0, .duration_left=0.1, .speed=0.1, .step = 1, .type = ONESHOT};
    Animation ancammypun2 = {.first=0, .last = fPUNCHING2-1, .cur = 0, .duration_left=0.1, .speed=0.1, .step = 1, .type = ONESHOT};
    Animation ancammypun3 = {.first=0, .last = fPUNCHING3-1, .cur = 0, .duration_left=0.1, .speed=0.08, .step = 1, .type = ONESHOT};
    //Animation ancammyjmp = {.first=0, .last = 4, .cur = 0, .duration_left=0.1, .speed=0.1, .step = 1, .type = REPEATING}; */

    //Animation* curAnimation = calloc(5, sizeof(Animation));


    ------------------------------------------------------------------

    /*switch (animState)
        {
            case WALKING:
                animationupdate(&cammyanimations[WALKING], &can_update_animation, &animState);
            break;
            case WALKINGB:
                animationupdate(&cammyanimations[WALKINGB], &can_update_animation, &animState);
                break;
            case PUNCHING1:
                animationupdate(&cammyanimations[PUNCHING1], &can_update_animation, &animState);
                if(cammyanimations[PUNCHING1].cur == 1)
                    atkRec = (Rectangle){.x = pos.x+12, .y = pos.y -71, .width=20, .height= 7};
                else
                    atkRec = (Rectangle){.x = -900, .y = pos.y -71, .width=20, .height= 7};
                break;
            case PUNCHING2:
                animationupdate(&cammyanimations[PUNCHING2], &can_update_animation, &animState);
                break;
            case PUNCHING3:
                animationupdate(&cammyanimations[PUNCHING3], &can_update_animation, &animState);
                break;
            case IDLE:
                animationupdate(&cammyanimations[IDLE], &can_update_animation, &animState);
                break;
            default:
                //DrawTexturePro(cammyidl, animation_frame(&ancammyidl, 5, 47, 84), (Rectangle){pos.x, pos.y, 47, 84}, (Vector2){0,0}, 0.0f, WHITE);
                break;
        }*/
     =================================================================================
     =========================load imgs====================================
   /* Image sprtcammy = LoadImage("assets/personagens/image.png");


    Rectangle idlsprtcammy = {.x = 0, .y = 0, .width=wIDLE*fIDLE, .height=hIDLE};
    Rectangle wlksprtcammy = {.x = 0, .y = 84, .width = wWALKINGs*fWALKING, .height=hWALKINGs};
    Rectangle pun1sprtcammy= {.x=0, .y = 87+84, .width = wPUNCHINGs*fPUNCHING1, .height=hPUNCHINGs};
    Rectangle pun2sprtcammy= {.x=pun1sprtcammy.width, .y = pun1sprtcammy.y, .width = wPUNCHINGs*fPUNCHING2, .height=hPUNCHINGs};
    Rectangle pun3sprtcammy= {.x=pun1sprtcammy.width + pun2sprtcammy.width, .y = pun1sprtcammy.y, .width = wPUNCHINGs*fPUNCHING3, .height=hPUNCHINGs};
    //Rectangle jmpsprtcammy = {.x = 670, .y=8, .width = 193, .height = 105};

    Image sprtidlcammy = ImageFromImage(sprtcammy, idlsprtcammy);
    Image sprtwlkcammy = ImageFromImage(sprtcammy, wlksprtcammy);
    Image sprtpun1cammy= ImageFromImage(sprtcammy, pun1sprtcammy);
    Image sprtpun2cammy= ImageFromImage(sprtcammy, pun2sprtcammy);
    Image sprtpun3cammy= ImageFromImage(sprtcammy, pun3sprtcammy);
    //Image sprtjmpcammy = ImageFromImage(sprtcammy, jmpsprtcammy);

    */

    /*
    Texture2D cammyidl = LoadTextureFromImage(sprtidlcammy);
    Texture2D cammywlk = LoadTextureFromImage(sprtwlkcammy);
    Texture2D cammypun1= LoadTextureFromImage(sprtpun1cammy);
    Texture2D cammypun2= LoadTextureFromImage(sprtpun2cammy);
    Texture2D cammypun3= LoadTextureFromImage(sprtpun3cammy);
   // Texture2D cammyjmp = LoadTextureFromImage(sprtjmpcammy);*/
     ====================================================================
     ========================== drawn ====================
/*
        switch (animState)
        {
        case WALKING:
            colRec = (Rectangle){pos.x, pos.y,  wWALKINGs, hWALKINGs};
            colRec2 = (Rectangle){pos.x - 17, pos.y - hWALKINGs,  22, 81};
            DrawTexturePro(cammy.textures[WALKING], animation_frame(&cammy.animations[WALKING]), colRec, (Vector2){wWALKINGs/2 ,hWALKINGs}, 0.0f, WHITE);
            DrawRectangleLinesEx(colRec2, 2.0, BLACK);
            break;
        case WALKINGB:
            colRec2 = (Rectangle){pos.x - 17, pos.y - hWALKINGs,  22, 81};
            DrawTexturePro(cammy.textures[WALKING], animation_frame(&cammy.animations[WALKINGB]), (Rectangle){pos.x, pos.y,  wWALKINGs, hWALKINGs}, (Vector2){wWALKINGs/2 ,hWALKINGs}, 0.0f, WHITE);
            DrawRectangleLinesEx(colRec2, 2.0, BLACK);
            break;
        case PUNCHING1:
            DrawTexturePro(cammy.textures[PUNCHING1], animation_frame(&cammy.animations[PUNCHING1]), (Rectangle){pos.x, pos.y, wPUNCHINGs, hPUNCHINGs}, (Vector2){wPUNCHINGs/2 ,hPUNCHINGs}, 0.0f, WHITE);
            //DrawRectangleGradientEx(atkRec, RED, BLUE, GREEN, PURPLE);
            break;
        case PUNCHING2:
            DrawTexturePro(cammy.textures[PUNCHING2], animation_frame(&cammy.animations[PUNCHING2]), (Rectangle){pos.x, pos.y, wPUNCHINGs, hPUNCHINGs}, (Vector2){wPUNCHINGs/2 ,hPUNCHINGs}, 0.0f, WHITE);
            break;
        case PUNCHING3:
            DrawTexturePro(cammy.textures[PUNCHING3], animation_frame(&cammy.animations[PUNCHING3]), (Rectangle){pos.x, pos.y, wPUNCHINGs, hPUNCHINGs}, (Vector2){wPUNCHINGs/2 ,hPUNCHINGs}, 0.0f, WHITE);
            break;
        case IDLE:
            colRec2 = (Rectangle){pos.x - 17, pos.y - hWALKINGs,  22, 81};
            DrawTexturePro(cammy.textures[IDLE], animation_frame(&cammy.animations[IDLE]), (Rectangle){pos.x, pos.y, cammy.animations[IDLE].frame_width, cammy.animations[IDLE].frame_height}, (Vector2){cammy.animations[IDLE].frame_width/2 ,cammy.animations[IDLE].frame_height}, 0.0f, WHITE);
            DrawRectangleLinesEx(colRec2, 2.0, BLACK);
            break;
        default:
            //DrawTexturePro(cammyidl, animation_frame(&ancammyidl, 5, 47, 84), (Rectangle){pos.x, pos.y, 47, 84}, (Vector2){0,0}, 0.0f, WHITE);
            break;
        }*/
        //DrawTexture(cammywlk, 10, 10, WHITE);
     ========================================